include /etc/sway/config.d/*
include i3/themes/catppuccin-mocha
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term wezterm

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu sirula


### Output configuration
#
# Example configuration:
#
output HDMI-A-1 resolution 1920x1080@60hz
# output HDMI-A-1 modeline 138.50  1920 1968 2000 2080  1080 1083 1088 1111 +hsync -vsync
output HDMI-A-1 scale 1.5
output HDMI-A-1 pos 1280 0
# output HDMI-A-1 transform 270
output HDMI-A-1 background /home/brown/.local/share/wallpapers/wallpaperflare.com_wallpaper16.jpg fill
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output eDP-1 scale 1.2
# focus output HDMI-A-1
output eDP-1 background /home/brown/.local/share/wallpapers/wallpaperflare.com_wallpaper16.jpg fill
#output eDP-1 background /home/brown/Downloads/arch-journey-dark.png fill
### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'

# bindsym $mod+x exec ~/.local/bin/mylock
set $lock swaylock --clock --indicator --screenshots --effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 4x2 --datestr "%a %e.%m.%Y" --timestr "%k:%M"

exec swayidle -w \
  timeout 300 'swaylock -f -c 000000' \
  timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaylock -f -c 000000'

set $lockman exec bash ~/.config/sway/lockman.sh
bindsym $mod+x exec slock
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#

# Example configuration:
#
input "1267:12448:ELAN072B:00_04F3:30A0_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input "1:1:AT_Translated_Set_2_keyboard" {
  xkb_options caps:swapescape
  xkb_numlock enabled
}
input type:keyboard xkb_numlock enabled
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
hide_edge_borders smart
focus_follows_mouse no
workspace_auto_back_and_forth yes
show_marks yes
titlebar_border_thickness 0
titlebar_padding 1 1

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
  swaybar_command waybar
}

# Font
font pango: Inconsolata 12

# Window borders
default_border pixel 3
default_floating_border normal
xwayland enable

smart_borders on
gaps right 3
gaps left 3
gaps inner 10

#border_images.unfocused /some/folder/image.png
#border_images.urgent /some/folder/image.png

# target                 title     bg    text   indicator  border
client.focused           #CF9FFF $base $text  $rosewater   #CF9FFF
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

# Default workspaces for common programs

assign [app_id="Celluloid$"] 5
assign [app_id="^Alacritty$"] 2
assign [app_id="^evince$"] 6
assign [app_id="^figma-linux$"] 10
assign [app_id="^firefox$"] 1
assign [app_id="^firefoxdeveloperedition$"] 1
assign [app_id="^google-chrome$"] 1
assign [app_id="^kitty$"] 2
assign [app_id="^chromium$"] 1
assign [app_id="^org.wezfurlong.wezterm$"] 2
assign [app_id="^mpv$"] 5
assign [app_id="^rhythmbox$"] 5
assign [app_id="^org.gnome.Nautilus$"] 3
assign [app_id="^org.pwmt.zathura$"] 6
assign [app_id="^org.qbittorrent.qBittorrent$"] 8
assign [app_id="^org.telegram.desktop$"] 7
assign [app_id="^org.zealdocs.zeal$"] 10
assign [app_id="^remarkable$"] 4
assign [app_id="^telegramdesktop$"] 7
assign [app_id="^virt-manager$"] 10
assign [app_id="pcmanfm$"] 3
assign [class="^Alacritty$"] 2
assign [class="^Atril$"] 6
assign [class="^Caja$"] 3
assign [class="^chromium$"] 1
assign [class="^Google-chrome-unstable$"] 1
assign [class="^Eclipse$"] 4
assign [class="^FireFox$"] 1
assign [class="^Foxit Reader$"] 6
assign [class="^Gimp-2.10$"] 2
assign [class="^Google-chrome$"] 1
assign [class="^Insomnia$"] 10
assign [class="^Mate-terminal$"] 2
assign [class="^Thorium-browser$"] 1
assign [class="^Navigator$"] 1
assign [class="^Nightly$"] 1
assign [class="^VSCodium$"] 4
assign [class="^VirtualBox Manager$"] 10
assign [class="^Wpsoffice$"] 10
assign [class="^code-oss$"] 4
assign [class="^Code$"] 4
assign [class="^Spotify$"] 4
assign [class="^discord$"] 9
assign [class="^figma-linux$"] 10
assign [class="^firefox$"] 1
assign [class="^firefoxdeveloperedition$"] 1
assign [class="^jetbrains-idea$"] 4
assign [class="^jetbrains-idea-ce$"] 4
assign [class="^jetbrains-pycharm$"] 4
assign [class="^jetbrains-studio$"] 4
assign [class="^kitty$"] 2
assign [class="^mpv$"] 5
assign [class="^okular$"] 6
assign [class="^postman$"] 4
assign [class="^bruno$"] 4
assign [class="^postman$"] 4
assign [class="^scrcpy$"] 9
assign [class="^qBittorrent$"] 8
assign [class="^vlc$"] 5

set $opacity 0.9
for_window [app_id="^Alacritty$"] border none
for_window [app_id="^alacritty$"] opacity $opacity
for_window [app_id="^org.gnome.Nautilus$"] opacity $opacity
for_window [app_id="^org.qbittorrent.qBittorrentorg$"] opacity $opacity
for_window [app_id="^pcmanfm$"] opacity $opacity
for_window [app_id="^telegramdesktop$"] opacity $opacity
for_window [app_id="scrcpy"] border none, floating enable, move position 2ppt 0, move right 30px
for_window [app_id="zoom" title="Settings"] floating enable, floating_minimum_size 760 x 400
for_window [app_id="zoom" title="Zoom Meeting(.*)?"] workspace next_on_output --create, move container to workspace current, floating disable, inhibit_idle open
for_window [app_id="zoom" title="^(Zoom|About)$"] border pixel, floating enable
for_window [class="^Google-chrome"] border none
for_window [class="^bruno$"] opacity $opacity
for_window [class="^discord$"] opacity $opacity, border none
for_window [class="^kitty$"] opacity $opacity
for_window [class="^postman$"] opacity $opacity
for_window [class="^st-256color$"] opacity $opacity
for_window [class="scrcpy"] border none, floating enable, move position 75ppt 0
for_window [class="^Spotify$"] opacity $opacity, floating enable, floating_minimum_size 760 x 400, border none

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec_always /home/brown/.config/sway/script.sh
exec nm-applet --indicator

#exec twmnd
exec swaync



### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term
##bindsym $mod+Return exec  wmctrl -x -a "alacritty" || $term -e tmux
#bindsym $mod+Return exec  wezterm
# bindsym $mod+Alt+h exec clipman pick --tool wofi -T'--prompt=my-prompt -i'
bindsym $mod+Alt+h exec cliphist list | wofi -S dmenu | cliphist decode | wl-copy

# Toggle workspace.
bindsym $mod+Tab workspace back_and_forth

# Move focus window to next monitor
bindsym Alt+Right move workspace to output right
bindsym Alt+Left move workspace to output left
bindsym Alt+Up move workspace to output up
bindsym Alt+Down move workspace to output down
# Kill focused window
bindsym $mod+c kill

# Start your launcher
bindsym $mod+d exec $menu

# Upload screenshot and copy url to clipboard
# bindsym Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name')
bindsym Print exec /usr/bin/sway-interactive-screenshot

# bindsym $mod+Print exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')"
bindsym $mod+Print exec /usr/bin/sway-interactive-screenshot --video

floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+r reload

# Exit sway (logs you out of your Wayland session)
#bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
# #
# Brightness controls
bindsym --locked XF86MonBrightnessDown exec xbacklight -dec 10
bindsym --locked XF86MonBrightnessUp exec xbacklight -inc 10

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

workspace 1 output HDMI-A-1
workspace 2 output eDP-1
workspace 3 output HDMI-A-1
workspace 4 output HDMI-A-1
workspace 5 output HDMI-A-1
workspace 6 output HDMI-A-1
workspace 7 output eDP-1
workspace 8 output HDMI-A-1
workspace 10 output HDMI-A-1
workspace 9 output eDP-1
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+m layout stacking
bindsym $mod+s layout tabbed
bindsym $mod+t layout toggle split
bindsym $mod+o layout sticky enable

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Shift+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

# Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

# Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"
bindsym Mod4+e exec /home/brown/.local/bin/wofi-emoji
# exec_always autotiling
exec_always wlsunset -l 9.076479 -L 7.398574
exec wl-paste --watch cliphist store
